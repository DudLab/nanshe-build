package:
  name: nanshe
  version: v0.1.0a0

source:
  git_url: https://github.com/jakirkham/nanshe
  git_tag: v0.1.0a0

build:
  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

  # Whether binary files should be made relocatable using install_name_tool
  # on OS X or patchelf on Linux.
  #binary_relocation: false # (defaults to true)

  # Binary files may contain the build prefix and need it replaced with the
  # install prefix at installation time.  Conda can automatically identify
  # and register such files:
  detect_binary_files_with_prefix: true # (defaults to false)

requirements:
  # Packages required to build the package. python and numpy must be
  # listed explicitly if they are required.
  build:
    - openblas
    - fftw
    - python
    - setuptools
    - psutil
    - numpy
    - scipy
    - h5py
    - bottleneck
    - pyfftw
    - scikit-image
    - vigra
    - spams
    - rank_filter
    - pyqt
    - volumina

  # Packages required to run the package. These are the dependencies that
  # will be installed automatically whenever the package is installed.
  # Package names should be any valid conda spec (see "Specifying versions
  # in requirements" below).
  run:
    - openblas
    - fftw
    - python
    - setuptools
    - psutil
    - numpy
    - scipy
    - h5py
    - bottleneck
    - pyfftw
    - scikit-image
    - vigra
    - spams
    - rank_filter
    - pyqt
    - volumina

test:
  # Python imports
  imports:
    - nanshe

  #commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    #- nanshe-converter --help
    #- nanshe-learner --help
    #- nanshe-register --help
    #- nanshe-viewer --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    # Put any additional test requirements here.  For example
    - nose

about:
  home: http://github.com/jakirkham/nanshe
  license: GPLv3
  summary: 'An image processing toolkit'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
